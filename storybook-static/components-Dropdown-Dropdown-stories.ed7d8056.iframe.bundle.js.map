{"version":3,"file":"components-Dropdown-Dropdown-stories.ed7d8056.iframe.bundle.js","mappings":";;;;;;AAiBA;AACA;AACA;AAGA","sources":["webpack://component-library/./src/components/Dropdown/Dropdown.tsx"],"sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nexport interface DropdownProps {\r\n  options: string[];\r\n  disabled?: boolean;\r\n  onSelect: (value: string) => void;\r\n  backgroundColor?: string;\r\n  textColor?: string;\r\n}\r\n\r\nconst Select = styled.select<{ disabled?: boolean, backgroundColor?: string, textColor?: string }>`\r\n  width: 200px;\r\n  padding: 8px;\r\n  font-size: 16px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 5px;\r\n  background: ${props => (props.disabled ? 'grey' : props.backgroundColor || 'white')};\r\n  color: ${props => (props.disabled ? 'white' : props.textColor || 'black')};\r\n  cursor: ${props => (props.disabled ? 'not-allowed' : 'pointer')};\r\n`;\r\n\r\nfunction Dropdown({ options, disabled, onSelect, backgroundColor , textColor  }: DropdownProps) {\r\n  return (\r\n    <Select onChange={(e) => onSelect(e.target.value)} disabled={disabled} backgroundColor={backgroundColor} textColor={textColor}>\r\n      {options.map((option, index) => (\r\n        <option key={index} value={option}>\r\n          {option}\r\n        </option>\r\n      ))}\r\n    </Select>\r\n  );\r\n}\r\n\r\nexport default Dropdown;"],"names":[],"sourceRoot":""}